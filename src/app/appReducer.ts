import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { toast } from "react-toastify";

const initialState: AppStateType = {
	isInitialized: false,
	globalAppStatus: 'idle', // –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ–±—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —Å—Ç–∞–¥–∏—è —Ä–∞–±–æ—Ç—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–∞–≤–∞—Ç—å –∫–∞–∫—É—é-—Ç–æ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
	localAppStatus: "idle", // –¥–æ–±–∞–≤–∏–ª —ç—Ç–æ –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ç–∞—Å–∫–∞–º–∏ –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–∫–ª—é—á–∞—Ç—å –¥—Ä—É–≥—É—é –ª–æ–∞–¥–µ—Ä
	error: null // –¥–ª—è –≤—ã–≤–æ–¥–∞ –∫–∞–∫–∏—Ö-—Ç–æ –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫
}

const slice = createSlice( {
	name: "app",
	initialState: initialState,
	reducers: {
		setGlobalAppStatus: ( state, action: PayloadAction<{ globalAppStatus: RequestStatusType }> ) => {
			state.globalAppStatus = action.payload.globalAppStatus
		},
		setLocalAppStatus: ( state, action: PayloadAction<{ localAppStatus: RequestStatusType }> ) => {
			state.localAppStatus = action.payload.localAppStatus
		},
		setAppError: ( state, action: PayloadAction<{ error: null | string }> ) => {
			state.error = action.payload.error
			toast.error(action.payload.error + " üôà")
		},
		setIsInitialized: ( state, action: PayloadAction<{ isInitialized: boolean }> ) => {
			state.isInitialized = action.payload.isInitialized
		}
	}
} )

export const appReducer = slice.reducer
export const { setGlobalAppStatus, setLocalAppStatus, setAppError, setIsInitialized } = slice.actions

//types
export type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed'

export type AppStateType = {
	isInitialized: boolean
	globalAppStatus: RequestStatusType
	localAppStatus: RequestStatusType
	error: string | null
}

